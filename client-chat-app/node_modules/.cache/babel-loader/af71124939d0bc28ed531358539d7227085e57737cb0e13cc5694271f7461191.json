{"ast":null,"code":"var _jsxFileName = \"/Users/marcfelixdegni/Documents/chat-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useRef } from \"react\";\n// import io from \"socket.io-client\";\n// import { ToastContainer } from 'react-toastify';\n// import { Button, Input, Badge, Tooltip, Avatar } from 'antd';\n// import { LikeOutlined, DislikeOutlined, AudioOutlined, SmileOutlined } from '@ant-design/icons';\n// import 'react-toastify/dist/ReactToastify.css';\n// import './Chat.css';\n\n// const socket = io('http://localhost:4000');\n\n// const Chat = () => {\n//   const [message, setMessage] = useState(\"\");\n//   const [chat, setChat] = useState([]);\n//   const messagesRef = useRef(null);\n\n//   const sendMessage = (event) => {\n//     event.preventDefault();\n//     const timestamp = new Date();\n//     setChat([...chat, { text: message, avatar: \"https://via.placeholder.com/40\", timestamp, sent: true }]);\n//     socket.emit(\"chat message\", { text: message, avatar: \"https://via.placeholder.com/40\", timestamp, likes: 0, dislikes: 0 });\n//     setMessage(\"\");\n//   };\n\n//   useEffect(() => {\n//     socket.on(\"chat message\", (msg) => {\n//       setChat((chat) => [...chat, { ...msg, sent: false }]);\n//     });\n\n//     return () => socket.off(\"chat message\");\n//   }, []);\n\n//   useEffect(() => {\n//     if (messagesRef.current) {\n//       messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n//     }\n//   }, [chat]);\n\n//   return (\n//     <div className=\"chat-container\">\n//       <ToastContainer />\n//       <div className=\"messages\" ref={messagesRef}>\n//         {chat.map((msg, index) => (\n//           <div className={msg.sent ? \"sent-message message\" : \"received-message message\"} key={index}>\n//             <Avatar src={msg.avatar} />\n//             <div className=\"message-content\">\n//               <p>{msg.text}</p>\n//               <span>{new Date(msg.timestamp).toLocaleTimeString()}</span>\n//             </div>\n//             {!msg.sent && (\n//               <div className=\"reactions\">\n//                 <Tooltip title=\"Like\">\n//                   <Badge className=\"badge\" count={msg.likes} overflowCount={999}>\n//                     <Button shape=\"circle\" icon={<LikeOutlined />} size=\"small\"/>\n//                   </Badge>\n//                 </Tooltip>\n//                 <Tooltip title=\"Dislike\">\n//                   <Badge className=\"badge\" count={msg.dislikes} overflowCount={999}>\n//                     <Button shape=\"circle\" icon={<DislikeOutlined />} size=\"small\"/>\n//                   </Badge>\n//                 </Tooltip>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//         <form onSubmit={sendMessage} className=\"message-input\">\n//           <Button shape=\"circle\" icon={<SmileOutlined />} size=\"small\"/>\n//           <Input\n//             value={message}\n//             onChange={(e) => setMessage(e.target.value)}\n//             placeholder=\"Type a message\"\n//           />\n//           <Button shape=\"circle\" icon={<AudioOutlined />} size=\"small\"/>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { ToastContainer } from 'react-toastify';\nimport { Button, Input, Badge, Tooltip, Avatar } from 'antd';\nimport { LikeOutlined, DislikeOutlined, AudioOutlined, SmileOutlined } from '@ant-design/icons';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const messagesRef = useRef(null);\n  const sendMessage = event => {\n    event.preventDefault();\n    const timestamp = new Date();\n    setChat([...chat, {\n      text: message,\n      avatar: \"https://via.placeholder.com/40\",\n      timestamp,\n      sent: true\n    }]);\n    socket.emit(\"chat message\", {\n      text: message,\n      avatar: \"https://via.placeholder.com/40\",\n      timestamp,\n      likes: 0,\n      dislikes: 0\n    });\n    setMessage(\"\");\n  };\n  useEffect(() => {\n    socket.on(\"chat message\", msg => {\n      setChat(chat => [...chat, {\n        ...msg,\n        sent: false\n      }]);\n    });\n    return () => socket.off(\"chat message\");\n  }, []);\n  useEffect(() => {\n    if (messagesRef.current) {\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    }\n  }, [chat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      ref: messagesRef,\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sent ? \"sent-message message\" : \"received-message message\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: msg.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(msg.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), !msg.sent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reactions\",\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Like\",\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              className: \"badge\",\n              count: msg.likes,\n              overflowCount: 999,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                shape: \"circle\",\n                icon: /*#__PURE__*/_jsxDEV(LikeOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 50\n                }, this),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Dislike\",\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              className: \"badge\",\n              count: msg.dislikes,\n              overflowCount: 999,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                shape: \"circle\",\n                icon: /*#__PURE__*/_jsxDEV(DislikeOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 50\n                }, this),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        shape: \"circle\",\n        icon: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 38\n        }, this),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        shape: \"circle\",\n        icon: /*#__PURE__*/_jsxDEV(AudioOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 38\n        }, this),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"A/m7Tm0tpfCtnWPNeWtPGAy9eE4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","ToastContainer","Button","Input","Badge","Tooltip","Avatar","LikeOutlined","DislikeOutlined","AudioOutlined","SmileOutlined","jsxDEV","_jsxDEV","socket","Chat","_s","message","setMessage","chat","setChat","messagesRef","sendMessage","event","preventDefault","timestamp","Date","text","avatar","sent","emit","likes","dislikes","on","msg","off","current","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","index","src","toLocaleTimeString","title","count","overflowCount","shape","icon","size","onSubmit","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/marcfelixdegni/Documents/chat-app/src/App.js"],"sourcesContent":["// import React, { useEffect, useState, useRef } from \"react\";\n// import io from \"socket.io-client\";\n// import { ToastContainer } from 'react-toastify';\n// import { Button, Input, Badge, Tooltip, Avatar } from 'antd';\n// import { LikeOutlined, DislikeOutlined, AudioOutlined, SmileOutlined } from '@ant-design/icons';\n// import 'react-toastify/dist/ReactToastify.css';\n// import './Chat.css';\n\n// const socket = io('http://localhost:4000');\n\n// const Chat = () => {\n//   const [message, setMessage] = useState(\"\");\n//   const [chat, setChat] = useState([]);\n//   const messagesRef = useRef(null);\n\n//   const sendMessage = (event) => {\n//     event.preventDefault();\n//     const timestamp = new Date();\n//     setChat([...chat, { text: message, avatar: \"https://via.placeholder.com/40\", timestamp, sent: true }]);\n//     socket.emit(\"chat message\", { text: message, avatar: \"https://via.placeholder.com/40\", timestamp, likes: 0, dislikes: 0 });\n//     setMessage(\"\");\n//   };\n\n//   useEffect(() => {\n//     socket.on(\"chat message\", (msg) => {\n//       setChat((chat) => [...chat, { ...msg, sent: false }]);\n//     });\n\n//     return () => socket.off(\"chat message\");\n//   }, []);\n\n//   useEffect(() => {\n//     if (messagesRef.current) {\n//       messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n//     }\n//   }, [chat]);\n\n//   return (\n//     <div className=\"chat-container\">\n//       <ToastContainer />\n//       <div className=\"messages\" ref={messagesRef}>\n//         {chat.map((msg, index) => (\n//           <div className={msg.sent ? \"sent-message message\" : \"received-message message\"} key={index}>\n//             <Avatar src={msg.avatar} />\n//             <div className=\"message-content\">\n//               <p>{msg.text}</p>\n//               <span>{new Date(msg.timestamp).toLocaleTimeString()}</span>\n//             </div>\n//             {!msg.sent && (\n//               <div className=\"reactions\">\n//                 <Tooltip title=\"Like\">\n//                   <Badge className=\"badge\" count={msg.likes} overflowCount={999}>\n//                     <Button shape=\"circle\" icon={<LikeOutlined />} size=\"small\"/>\n//                   </Badge>\n//                 </Tooltip>\n//                 <Tooltip title=\"Dislike\">\n//                   <Badge className=\"badge\" count={msg.dislikes} overflowCount={999}>\n//                     <Button shape=\"circle\" icon={<DislikeOutlined />} size=\"small\"/>\n//                   </Badge>\n//                 </Tooltip>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//         <form onSubmit={sendMessage} className=\"message-input\">\n//           <Button shape=\"circle\" icon={<SmileOutlined />} size=\"small\"/>\n//           <Input\n//             value={message}\n//             onChange={(e) => setMessage(e.target.value)}\n//             placeholder=\"Type a message\"\n//           />\n//           <Button shape=\"circle\" icon={<AudioOutlined />} size=\"small\"/>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { ToastContainer } from 'react-toastify';\nimport { Button, Input, Badge, Tooltip, Avatar } from 'antd';\nimport { LikeOutlined, DislikeOutlined, AudioOutlined, SmileOutlined } from '@ant-design/icons';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Chat.css';\n\nconst socket = io('http://localhost:4000');\n\nconst Chat = () => {\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const messagesRef = useRef(null);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    const timestamp = new Date();\n    setChat([...chat, { text: message, avatar: \"https://via.placeholder.com/40\", timestamp, sent: true }]);\n    socket.emit(\"chat message\", { text: message, avatar: \"https://via.placeholder.com/40\", timestamp, likes: 0, dislikes: 0 });\n    setMessage(\"\");\n  };\n\n  useEffect(() => {\n    socket.on(\"chat message\", (msg) => {\n      setChat((chat) => [...chat, { ...msg, sent: false }]);\n    });\n\n    return () => socket.off(\"chat message\");\n  }, []);\n\n  useEffect(() => {\n    if (messagesRef.current) {\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    }\n  }, [chat]);\n\n  return (\n    <div className=\"chat-container\">\n      <ToastContainer />\n      <div className=\"messages\" ref={messagesRef}>\n        {chat.map((msg, index) => (\n          <div className={msg.sent ? \"sent-message message\" : \"received-message message\"} key={index}>\n            <Avatar src={msg.avatar} />\n            <div className=\"message-content\">\n              <p>{msg.text}</p>\n              <span>{new Date(msg.timestamp).toLocaleTimeString()}</span>\n            </div>\n            {!msg.sent && (\n              <div className=\"reactions\">\n                <Tooltip title=\"Like\">\n                  <Badge className=\"badge\" count={msg.likes} overflowCount={999}>\n                    <Button shape=\"circle\" icon={<LikeOutlined />} size=\"small\"/>\n                  </Badge>\n                </Tooltip>\n                <Tooltip title=\"Dislike\">\n                  <Badge className=\"badge\" count={msg.dislikes} overflowCount={999}>\n                    <Button shape=\"circle\" icon={<DislikeOutlined />} size=\"small\"/>\n                  </Badge>\n                </Tooltip>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={sendMessage} className=\"message-input\">\n        <Button shape=\"circle\" icon={<SmileOutlined />} size=\"small\"/>\n        <Input\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Type a message\"\n        />\n        <Button shape=\"circle\" icon={<AudioOutlined />} size=\"small\"/>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}